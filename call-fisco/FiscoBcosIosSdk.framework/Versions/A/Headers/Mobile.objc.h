// Objective-C API for talking to github.com/FISCO-BCOS/go-sdk/mobile/iOS Go package.
//   gobind -lang=objc github.com/FISCO-BCOS/go-sdk/mobile/iOS
//
// File is generated by gobind. Do not edit.

#ifndef __Mobile_H__
#define __Mobile_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class MobileBcosSDK;
@class MobileBuildSDKResult;
@class MobileCallResult;
@class MobileContractParams;
@class MobileContractProxy;
@class MobileFullTransaction;
@class MobileNetworkResponse;
@class MobileRPCResult;
@class MobileReceiptResult;
@class MobileTransactionResult;
@class MobileTxReceipt;
@protocol MobilePostCallback;
@class MobilePostCallback;

@protocol MobilePostCallback <NSObject>
- (NSString* _Nonnull)sendRequest:(NSString* _Nullable)rpcRequest;
@end

@interface MobileBcosSDK : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * BuildSDKWithParam
Connect to the proxy or FISCO BCOS node.
Please make sure ca.crt, sdk.crt, sdk.key under path certPath.
Please provider full keyFile path
 */
- (MobileBuildSDKResult* _Nullable)buildSDKWithParam:(NSString* _Nullable)keyFile callback:(id<MobilePostCallback> _Nullable)callback groupID:(long)groupID chainID:(int64_t)chainID isSMCrypto:(BOOL)isSMCrypto;
/**
 * Call is a function to call a smart contract function without sending transaction
return CallResult
 */
- (MobileCallResult* _Nullable)call:(NSString* _Nullable)abiContract address:(NSString* _Nullable)address method:(NSString* _Nullable)method params:(NSString* _Nullable)params outputNum:(long)outputNum;
/**
 * DeployContract is a function to deploy a FISCO BCOS smart contract
Return receipt
 */
- (MobileReceiptResult* _Nullable)deployContract:(NSString* _Nullable)contractAbi contractBin:(NSString* _Nullable)contractBin params:(NSString* _Nullable)params;
/**
 * GetBlockNumber is to query the blockchain and get the latest block number.
Return the latest block number
 */
- (MobileRPCResult* _Nullable)getBlockNumber;
// skipped method BcosSDK.GetCallOpts with unsupported parameter or return types

/**
 * RPC calls
GetClientVersion is to query the client version of connected nodes
 */
- (MobileRPCResult* _Nullable)getClientVersion;
// skipped method BcosSDK.GetTransactOpts with unsupported parameter or return types

/**
 * GetTransactionByHash is to query the blockchain and get the transaction of a transaction hash.
Get transaction by tx hash
 */
- (MobileTransactionResult* _Nullable)getTransactionByHash:(NSString* _Nullable)txHash;
/**
 * GetTransactionReceipt is to query the blockchain and get the receipt of a transaction.
 */
- (MobileReceiptResult* _Nullable)getTransactionReceipt:(NSString* _Nullable)txHash;
/**
 * SendTransaction is a function to send an transaction to call smart contract function.
return receipt
 */
- (MobileReceiptResult* _Nullable)sendTransaction:(NSString* _Nullable)contractAbi address:(NSString* _Nullable)address method:(NSString* _Nullable)method params:(NSString* _Nullable)params;
@end

/**
 * BuildSDKResult return when build sdk
 */
@interface MobileBuildSDKResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL isSuccess;
@property (nonatomic) NSString* _Nonnull information;
@end

/**
 * CallResult return by call function
 */
@interface MobileCallResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long code;
@property (nonatomic) NSString* _Nonnull message;
@property (nonatomic) NSString* _Nonnull result;
@end

/**
 * ContractParams Parameters
 */
@interface MobileContractParams : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull valueType;
// skipped field ContractParams.Value with unsupported type: interface{}

@end

@interface MobileContractProxy : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped method ContractProxy.AsyncSendTransaction with unsupported parameter or return types

// skipped method ContractProxy.Call with unsupported parameter or return types

// skipped method ContractProxy.CallContext with unsupported parameter or return types

// skipped method ContractProxy.CallContract with unsupported parameter or return types

// skipped method ContractProxy.CodeAt with unsupported parameter or return types

// skipped method ContractProxy.FilterLogs with unsupported parameter or return types

// skipped method ContractProxy.GetBlockLimit with unsupported parameter or return types

// skipped method ContractProxy.GetChainID with unsupported parameter or return types

// skipped method ContractProxy.GetContractAddress with unsupported parameter or return types

// skipped method ContractProxy.GetGroupID with unsupported parameter or return types

// skipped method ContractProxy.PendingCodeAt with unsupported parameter or return types

/**
 * SMCrypto returns true if use sm crypto
 */
- (BOOL)smCrypto;
// skipped method ContractProxy.SendTransaction with unsupported parameter or return types

// skipped method ContractProxy.SubscribeFilterLogs with unsupported parameter or return types

@end

@interface MobileFullTransaction : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull blockHash;
@property (nonatomic) NSString* _Nonnull blockNumber;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull gas;
@property (nonatomic) NSString* _Nonnull gasPrice;
@property (nonatomic) NSString* _Nonnull hash;
@property (nonatomic) NSString* _Nonnull input;
@property (nonatomic) NSString* _Nonnull nonce;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) NSString* _Nonnull transactionIndex;
@property (nonatomic) NSString* _Nonnull value;
@end

/**
 * NetworkResponse data type return from the post callback
 */
@interface MobileNetworkResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long code;
@property (nonatomic) NSString* _Nonnull message;
// skipped field NetworkResponse.Result with unsupported type: encoding/json.RawMessage

@end

/**
 * RPCResult return by rpc request
 */
@interface MobileRPCResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long code;
@property (nonatomic) NSString* _Nonnull message;
@property (nonatomic) NSString* _Nonnull result;
@end

/**
 * ReceiptResult return by deploy and sendTransaction function.
 */
@interface MobileReceiptResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long code;
@property (nonatomic) NSString* _Nonnull message;
@property (nonatomic) MobileTxReceipt* _Nullable receipt;
@end

/**
 * TransactionResult result with transaction
 */
@interface MobileTransactionResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long code;
@property (nonatomic) NSString* _Nonnull message;
@property (nonatomic) MobileFullTransaction* _Nullable transaction;
@end

@interface MobileTxReceipt : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull transactionHash;
@property (nonatomic) NSString* _Nonnull transactionIndex;
@property (nonatomic) NSString* _Nonnull blockHash;
@property (nonatomic) NSString* _Nonnull blockNumber;
@property (nonatomic) NSString* _Nonnull gasUsed;
@property (nonatomic) NSString* _Nonnull contractAddress;
@property (nonatomic) NSString* _Nonnull root;
@property (nonatomic) long status;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) NSString* _Nonnull input;
@property (nonatomic) NSString* _Nonnull output;
@property (nonatomic) NSString* _Nonnull logs;
@property (nonatomic) NSString* _Nonnull logsBloom;
@end

@interface Mobile : NSObject
+ (NSError* _Nullable) errNoResult;
+ (void) setErrNoResult:(NSError* _Nullable)v;

@end

@class MobilePostCallback;

/**
 * PostCallback delegate callback function, will implement in outside objc code
 */
@interface MobilePostCallback : NSObject <goSeqRefInterface, MobilePostCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSString* _Nonnull)sendRequest:(NSString* _Nullable)rpcRequest;
@end

#endif
